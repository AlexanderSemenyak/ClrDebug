<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
/********************************************************************************
 * This code was generated by a tool.                                           *
 * Please do not modify this file directly - modify DelegateProvider.tt instead *
 ********************************************************************************/
using System;
using System.Runtime.InteropServices;
using static ClrDebug.Extensions;

namespace ClrDebug
{
    internal partial struct DelegateHolder
    {
        private IntPtr proc;

        internal DelegateHolder(IntPtr proc)
        {
            this.proc = proc;
        }
    }

    internal struct DelegateProvider
    {
        private IntPtr hModule;

        internal DelegateProvider(IntPtr hModule)
        {
            this.hModule = hModule;
        }

<#
var types = new[]
{
    "CLRCreateInstanceDelegate",
    "CloseCLREnumerationDelegate",
    "CloseResumeHandleDelegate",
    "CreateVersionStringFromModuleDelegate",
    "CreateDebuggingInterfaceFromVersionDelegate",
    "CreateDebuggingInterfaceFromVersionExDelegate",
    "CreateDebuggingInterfaceFromVersion2Delegate",
    "CreateDebuggingInterfaceFromVersion3Delegate",
    "CreateProcessForLaunchDelegate",
    "EnumerateCLRsDelegate",
    "GetStartupNotificationEventDelegate",
    "PSTARTUP_CALLBACK",
    "RegisterForRuntimeStartupDelegate",
    "RegisterForRuntimeStartupExDelegate",
    "RegisterForRuntimeStartup3Delegate",
    "ResumeProcessDelegate",
    "UnregisterForRuntimeStartupDelegate",

    "CLRDataCreateInstanceDelegate",
    "MetaDataGetDispenserDelegate",

    "get_hostfxr_path_fn",

    "hostfxr_close_fn",
    "hostfxr_get_available_sdks_fn",
    "hostfxr_get_dotnet_environment_info_fn",
    "hostfxr_get_native_search_directories_fn",
    "hostfxr_get_runtime_delegate_fn",
    "hostfxr_get_runtime_properties_fn",
    "hostfxr_get_runtime_property_value_fn",
    "hostfxr_initialize_for_dotnet_command_line_fn",
    "hostfxr_initialize_for_runtime_config_fn",
    "hostfxr_main_fn",
    "hostfxr_main_bundle_startupinfo_fn",
    "hostfxr_main_startupinfo_fn",
    "hostfxr_resolve_sdk_fn",
    "hostfxr_resolve_sdk2_fn",
    "hostfxr_run_app_fn",
    "hostfxr_set_error_writer_fn",
    "hostfxr_set_runtime_property_value_fn"
};

for(var i = 0; i < types.Length; i++)
{
    var name = types[i].Replace("Delegate", string.Empty).Replace("_fn", string.Empty);
#>
        public <#= types[i] #> <#= name #>
        {
            get
            {
                var export = GetExport(hModule, nameof(<#= name #>));

#if GENERATED_MARSHALLING
                return new DelegateHolder(export).<#= name #>;
#else
                return Marshal.GetDelegateForFunctionPointer<<#= types[i] #>>(export);
#endif
            }
        }
<#
    if(i < types.Length - 1)
        WriteLine("");
#>
<#
}
#>
    }
}