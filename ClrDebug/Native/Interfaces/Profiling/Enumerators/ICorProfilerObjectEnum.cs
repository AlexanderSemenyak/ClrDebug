using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
#if GENERATED_MARSHALLING
using System.Runtime.InteropServices.Marshalling;
#endif

namespace ClrDebug
{
    /// <summary>
    /// Provides methods to sequentially iterate through a collection of frozen objects that are generated by the Ngen.exe (Native Image Generator).
    /// </summary>
    /// <remarks>
    /// The ICorProfilerObjectEnum interface is an enumerator. It allows the receiver of an array to pull elements from
    /// the sender at a rate that is appropriate for the receiver. In other words, the receiver is able to explicitly control
    /// the flow of array elements, thereby avoiding the problems related to passing large arrays as method parameters.
    /// Use <see cref="ICorProfilerInfo2.EnumModuleFrozenObjects"/> to obtain a pointer to the ICorProfilerObjectEnum interface.
    /// </remarks>
    [Guid("2C6269BD-2D13-4321-AE12-6686365FD6AF")]
    [InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
#if !GENERATED_MARSHALLING
    [ComImport]
#else
    [GeneratedComInterface]
#endif
    public partial interface ICorProfilerObjectEnum
    {
        /// <summary>
        /// Advances the cursor of this enumerator from its current position so that the specified number of elements are skipped.
        /// </summary>
        /// <param name="celt">[in] The number of elements to be skipped.</param>
        /// <remarks>
        /// The new position of this enumerator's cursor is: (current position) + celt .
        /// </remarks>
        [PreserveSig]
        HRESULT Skip(
            [In] int celt);

        /// <summary>
        /// Moves this enumerator's cursor to the starting position of the sequence.
        /// </summary>
        [PreserveSig]
        HRESULT Reset();

        /// <summary>
        /// Gets an interface pointer to a copy of this <see cref="ICorProfilerObjectEnum"/> interface.
        /// </summary>
        /// <param name="ppEnum">[out] A pointer to the interface pointer that in turn points to the copy of this ICorProfilerObjectEnum interface.<para/>
        /// The copy maintains its own enumeration state separately from this one. However, the copy's initial cursor position will be the same as this enumerator's current cursor position.</param>
        [PreserveSig]
        HRESULT Clone(
            [Out, MarshalAs(UnmanagedType.Interface)] out ICorProfilerObjectEnum ppEnum);

        /// <summary>
        /// Gets the total number of frozen objects in the collection.
        /// </summary>
        /// <param name="pcelt">[out] A pointer to the number of frozen objects in the collection. This method will always return zero in the .NET Framework version 3.5 Service Pack 1 (SP1) and later versions.</param>
        [PreserveSig]
        HRESULT GetCount(
            [Out] out int pcelt);

        /// <summary>
        /// Gets the specified number of contiguous objects from a sequential collection of objects, starting at the enumerator's current position in the sequence.
        /// </summary>
        /// <param name="celt">[in] The number of objects to be retrieved.</param>
        /// <param name="objects">[out] An array of ObjectID values, each of which represents a retrieved object.</param>
        /// <param name="pceltFetched">[out] A pointer to the number of elements actually returned in the objects array.</param>
        [PreserveSig]
        HRESULT Next(
            [In] int celt,
            [Out] out ObjectID objects,
            [Out] out int pceltFetched);
    }
}
