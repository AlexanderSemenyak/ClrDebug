using System.Reflection;

namespace ClrDebug
{
    /// <summary>
    /// Specifies the properties of a module.
    /// </summary>
    /// <remarks>
    /// Bits from COR_PRF_MODULE_FLAGS are returned to the profiler in the pdwModuleFlags output parameter of the <see
    /// cref="ICorProfilerInfo3.GetModuleInfo2"/> method. Some combinations of two or more flags are possible, but not
    /// all combinations are possible.
    /// </remarks>
    public enum COR_PRF_MODULE_FLAGS
    {
        /// <summary>
        /// The module was loaded from disk.
        /// </summary>
        COR_PRF_MODULE_DISK = 0x00000001,

        /// <summary>
        /// The module was generated by the Native Image Generator (Ngen.exe).
        /// </summary>
        COR_PRF_MODULE_NGEN = 0x00000002,

        /// <summary>
        /// The module was created by methods in the <see cref="System.Reflection.Emit"/> namespace.
        /// </summary>
        COR_PRF_MODULE_DYNAMIC = 0x00000004,

        /// <summary>
        /// The module's lifetime is managed by the garbage collector.
        /// </summary>
        COR_PRF_MODULE_COLLECTIBLE = 0x00000008,

        /// <summary>
        /// The module contains no metadata and is used strictly as a resource. The managed equivalent of this bit is the <see cref="Module.IsResource"/> method.
        /// </summary>
        COR_PRF_MODULE_RESOURCE = 0x00000010,

        /// <summary>
        /// The module's layout in memory is flat, not mapped. If a module has this bit set, profilers that read information directly from the portable executable (PE) file header will have to be careful when interpreting relative virtual addresses (RVAs) in the header.
        /// </summary>
        COR_PRF_MODULE_FLAT_LAYOUT = 0x00000020,

        /// <summary>
        /// The Windows Runtime content type flag is set in the metadata for this module's assembly. This is the case for all Windows Metadata (.winmd) modules.
        /// </summary>
        COR_PRF_MODULE_WINDOWS_RUNTIME = 0x00000040,
    }
}
