/********************************************************** ***********
 * This code was generated by a tool.                                 *
 * Please do not modify this file directly - modify Tokens.tt instead *
 **********************************************************************/
 using System;
 using System.Diagnostics;

namespace ManagedCorDebug
{
    [DebuggerDisplay("{ToString(),nq}")]
    public struct CORDB_ADDRESS : IComparable, IEquatable<CORDB_ADDRESS>
    {
        public ulong Value { get; }

        public CORDB_ADDRESS(ulong value)
        {
            Value = value;
        }

        public CORDB_ADDRESS(long value) : this((ulong) value)
        {
        }

        public static implicit operator long(CORDB_ADDRESS value) => (long) value.Value;

        public static implicit operator ulong(CORDB_ADDRESS value) => value.Value;

        public static implicit operator CORDB_ADDRESS(long value) => new CORDB_ADDRESS(value);

        public static implicit operator CORDB_ADDRESS(ulong value) => new CORDB_ADDRESS(value);

        public int CompareTo(object value) => UnsignedValueHelpers.CompareTo<CORDB_ADDRESS>(Value, value);

        public bool Equals(CORDB_ADDRESS other) => other.Value.Equals(Value);

        public override bool Equals(object obj) => UnsignedValueHelpers.Equals(this, obj);

        public override int GetHashCode() => Value.GetHashCode();

        public override string ToString() => "0x" + Value.ToString("X");
    }

    [DebuggerDisplay("{ToString(),nq}")]
    public struct CORDB_REGISTER : IComparable, IEquatable<CORDB_REGISTER>
    {
        public ulong Value { get; }

        public CORDB_REGISTER(ulong value)
        {
            Value = value;
        }

        public CORDB_REGISTER(long value) : this((ulong) value)
        {
        }

        public static implicit operator long(CORDB_REGISTER value) => (long) value.Value;

        public static implicit operator ulong(CORDB_REGISTER value) => value.Value;

        public static implicit operator CORDB_REGISTER(long value) => new CORDB_REGISTER(value);

        public static implicit operator CORDB_REGISTER(ulong value) => new CORDB_REGISTER(value);

        public int CompareTo(object value) => UnsignedValueHelpers.CompareTo<CORDB_REGISTER>(Value, value);

        public bool Equals(CORDB_REGISTER other) => other.Value.Equals(Value);

        public override bool Equals(object obj) => UnsignedValueHelpers.Equals(this, obj);

        public override int GetHashCode() => Value.GetHashCode();

        public override string ToString() => "0x" + Value.ToString("X");
    }
}